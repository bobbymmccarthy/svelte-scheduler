import { includeCommonConfiguration } from "../../configurations";
import { Chrono } from "../../chrono";
import SlashDateFormatParser from "../../common/parsers/SlashDateFormatParser";
import PTWeekdayParser from "./parsers/PTWeekdayParser";
import PTTimeExpressionParser from "./parsers/PTTimeExpressionParser";
import PTMergeDateTimeRefiner from "./refiners/PTMergeDateTimeRefiner";
import PTMergeDateRangeRefiner from "./refiners/PTMergeDateRangeRefiner";
import PTMonthNameLittleEndianParser from "./parsers/PTMonthNameLittleEndianParser";
import PTCasualDateParser from "./parsers/PTCasualDateParser";
import PTCasualTimeParser from "./parsers/PTCasualTimeParser";
export const casual = new Chrono(createCasualConfiguration());
export const strict = new Chrono(createConfiguration(true));
export function parse(text, ref, option) {
    return casual.parse(text, ref, option);
}
export function parseDate(text, ref, option) {
    return casual.parseDate(text, ref, option);
}
export function createCasualConfiguration(littleEndian = true) {
    const option = createConfiguration(false, littleEndian);
    option.parsers.push(new PTCasualDateParser());
    option.parsers.push(new PTCasualTimeParser());
    return option;
}
export function createConfiguration(strictMode = true, littleEndian = true) {
    return includeCommonConfiguration({
        parsers: [
            new SlashDateFormatParser(littleEndian),
            new PTWeekdayParser(),
            new PTTimeExpressionParser(),
            new PTMonthNameLittleEndianParser(),
        ],
        refiners: [new PTMergeDateTimeRefiner(), new PTMergeDateRangeRefiner()],
    }, strictMode);
}
//# sourceMappingURL=index.js.map