import { includeCommonConfiguration } from "../../configurations";
import { Chrono } from "../../chrono";
import SlashDateFormatParser from "../../common/parsers/SlashDateFormatParser";
import ISOFormatParser from "../../common/parsers/ISOFormatParser";
import DETimeExpressionParser from "./parsers/DETimeExpressionParser";
import DEWeekdayParser from "./parsers/DEWeekdayParser";
import DESpecificTimeExpressionParser from "./parsers/DESpecificTimeExpressionParser";
import DEMergeDateRangeRefiner from "./refiners/DEMergeDateRangeRefiner";
import DEMergeDateTimeRefiner from "./refiners/DEMergeDateTimeRefiner";
import DECasualDateParser from "./parsers/DECasualDateParser";
import DECasualTimeParser from "./parsers/DECasualTimeParser";
import DEMonthNameLittleEndianParser from "./parsers/DEMonthNameLittleEndianParser";
import DETimeUnitRelativeFormatParser from "./parsers/DETimeUnitRelativeFormatParser";
import DETimeUnitWithinFormatParser from "./parsers/DETimeUnitWithinFormatParser";
export const casual = new Chrono(createCasualConfiguration());
export const strict = new Chrono(createConfiguration(true));
export function parse(text, ref, option) {
    return casual.parse(text, ref, option);
}
export function parseDate(text, ref, option) {
    return casual.parseDate(text, ref, option);
}
export function createCasualConfiguration(littleEndian = true) {
    const option = createConfiguration(false, littleEndian);
    option.parsers.unshift(new DECasualTimeParser());
    option.parsers.unshift(new DECasualDateParser());
    option.parsers.unshift(new DETimeUnitRelativeFormatParser());
    return option;
}
export function createConfiguration(strictMode = true, littleEndian = true) {
    return includeCommonConfiguration({
        parsers: [
            new ISOFormatParser(),
            new SlashDateFormatParser(littleEndian),
            new DETimeExpressionParser(),
            new DESpecificTimeExpressionParser(),
            new DEMonthNameLittleEndianParser(),
            new DEWeekdayParser(),
            new DETimeUnitWithinFormatParser(),
        ],
        refiners: [new DEMergeDateRangeRefiner(), new DEMergeDateTimeRefiner()],
    }, strictMode);
}
//# sourceMappingURL=index.js.map