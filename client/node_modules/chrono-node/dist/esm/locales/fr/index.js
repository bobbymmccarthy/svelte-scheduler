import { includeCommonConfiguration } from "../../configurations";
import { Chrono } from "../../chrono";
import FRCasualDateParser from "./parsers/FRCasualDateParser";
import FRCasualTimeParser from "./parsers/FRCasualTimeParser";
import SlashDateFormatParser from "../../common/parsers/SlashDateFormatParser";
import FRTimeExpressionParser from "./parsers/FRTimeExpressionParser";
import FRMergeDateTimeRefiner from "./refiners/FRMergeDateTimeRefiner";
import FRMergeDateRangeRefiner from "./refiners/FRMergeDateRangeRefiner";
import FRWeekdayParser from "./parsers/FRWeekdayParser";
import FRSpecificTimeExpressionParser from "./parsers/FRSpecificTimeExpressionParser";
import FRMonthNameLittleEndianParser from "./parsers/FRMonthNameLittleEndianParser";
import FRTimeUnitAgoFormatParser from "./parsers/FRTimeUnitAgoFormatParser";
import FRTimeUnitWithinFormatParser from "./parsers/FRTimeUnitWithinFormatParser";
import FRTimeUnitRelativeFormatParser from "./parsers/FRTimeUnitRelativeFormatParser";
export const casual = new Chrono(createCasualConfiguration());
export const strict = new Chrono(createConfiguration(true));
export function parse(text, ref, option) {
    return casual.parse(text, ref, option);
}
export function parseDate(text, ref, option) {
    return casual.parseDate(text, ref, option);
}
export function createCasualConfiguration(littleEndian = true) {
    const option = createConfiguration(false, littleEndian);
    option.parsers.unshift(new FRCasualDateParser());
    option.parsers.unshift(new FRCasualTimeParser());
    option.parsers.unshift(new FRTimeUnitRelativeFormatParser());
    return option;
}
export function createConfiguration(strictMode = true, littleEndian = true) {
    return includeCommonConfiguration({
        parsers: [
            new SlashDateFormatParser(littleEndian),
            new FRMonthNameLittleEndianParser(),
            new FRTimeExpressionParser(),
            new FRSpecificTimeExpressionParser(),
            new FRTimeUnitAgoFormatParser(),
            new FRTimeUnitWithinFormatParser(),
            new FRWeekdayParser(),
        ],
        refiners: [new FRMergeDateTimeRefiner(), new FRMergeDateRangeRefiner()],
    }, strictMode);
}
//# sourceMappingURL=index.js.map